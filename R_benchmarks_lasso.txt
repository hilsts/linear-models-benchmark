
R version 4.1.2 (2021-11-01) -- "Bird Hippie"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: aarch64-apple-darwin20 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(glmnet)
> 
> DATA_PATH = "/Users/hilsts/Documents/linear-models-benchmark/data/"
> df <- read.csv(paste(DATA_PATH,"song_data.csv", sep = ""))
> 
> set.seed(100)
> 
> df$song_name <- NULL
> 
> index = sample(1:nrow(df), 0.75 * nrow(df))
> 
> train = df[index, ]
> test = df[-index, ]
> 
> x = as.matrix(train)
> y_train = train$song_popularity
> 
> x_test = as.matrix(test)
> y_test = test$song_popularity
> 
> lambdas <- 10^seq(2, -3, by = -.1)
> 
> lasso <- function(x, y_train, x_test) {
+     lasso_reg <- cv.glmnet(x, y_train, alpha = 1, lambda = lambdas, standardize = TRUE, nfolds = 5)
+     lambda_best <- lasso_reg$lambda.min 
+     predictions_test <- predict(lasso_reg, s = lambda_best, newx = x_test)
+ }
> 
> start_time <- Sys.time()
> lasso(x, y_train, x_test)
> end_time <- Sys.time()
> print(end_time - start_time)
Time difference of 0.105526 secs
> 

R version 4.1.2 (2021-11-01) -- "Bird Hippie"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: aarch64-apple-darwin20 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(glmnet)
> 
> DATA_PATH = "/Users/hilsts/Documents/linear-models-benchmark/data/"
> df <- read.csv(paste(DATA_PATH,"song_data.csv", sep = ""))
> 
> set.seed(100)
> 
> df$song_name <- NULL
> 
> index = sample(1:nrow(df), 0.75 * nrow(df))
> 
> train = df[index, ]
> test = df[-index, ]
> 
> x = as.matrix(train)
> y_train = train$song_popularity
> 
> x_test = as.matrix(test)
> y_test = test$song_popularity
> 
> lambdas <- 10^seq(2, -3, by = -.1)
> 
> lasso <- function(x, y_train, x_test) {
+     lasso_reg <- cv.glmnet(x, y_train, alpha = 1, lambda = lambdas, standardize = TRUE, nfolds = 5)
+     lambda_best <- lasso_reg$lambda.min 
+     predictions_test <- predict(lasso_reg, s = lambda_best, newx = x_test)
+ }
> 
> start_time <- Sys.time()
> lasso(x, y_train, x_test)
> end_time <- Sys.time()
> print(end_time - start_time)
Time difference of 0.09530187 secs
> 

R version 4.1.2 (2021-11-01) -- "Bird Hippie"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: aarch64-apple-darwin20 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(glmnet)
> 
> DATA_PATH = "/Users/hilsts/Documents/linear-models-benchmark/data/"
> df <- read.csv(paste(DATA_PATH,"song_data.csv", sep = ""))
> 
> set.seed(100)
> 
> df$song_name <- NULL
> 
> index = sample(1:nrow(df), 0.75 * nrow(df))
> 
> train = df[index, ]
> test = df[-index, ]
> 
> x = as.matrix(train)
> y_train = train$song_popularity
> 
> x_test = as.matrix(test)
> y_test = test$song_popularity
> 
> lambdas <- 10^seq(2, -3, by = -.1)
> 
> lasso <- function(x, y_train, x_test) {
+     lasso_reg <- cv.glmnet(x, y_train, alpha = 1, lambda = lambdas, standardize = TRUE, nfolds = 5)
+     lambda_best <- lasso_reg$lambda.min 
+     predictions_test <- predict(lasso_reg, s = lambda_best, newx = x_test)
+ }
> 
> start_time <- Sys.time()
> lasso(x, y_train, x_test)
> end_time <- Sys.time()
> print(end_time - start_time)
Time difference of 0.09503508 secs
> 

R version 4.1.2 (2021-11-01) -- "Bird Hippie"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: aarch64-apple-darwin20 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(glmnet)
> 
> DATA_PATH = "/Users/hilsts/Documents/linear-models-benchmark/data/"
> df <- read.csv(paste(DATA_PATH,"song_data.csv", sep = ""))
> 
> set.seed(100)
> 
> df$song_name <- NULL
> 
> index = sample(1:nrow(df), 0.75 * nrow(df))
> 
> train = df[index, ]
> test = df[-index, ]
> 
> x = as.matrix(train)
> y_train = train$song_popularity
> 
> x_test = as.matrix(test)
> y_test = test$song_popularity
> 
> lambdas <- 10^seq(2, -3, by = -.1)
> 
> lasso <- function(x, y_train, x_test) {
+     lasso_reg <- cv.glmnet(x, y_train, alpha = 1, lambda = lambdas, standardize = TRUE, nfolds = 5)
+     lambda_best <- lasso_reg$lambda.min 
+     predictions_test <- predict(lasso_reg, s = lambda_best, newx = x_test)
+ }
> 
> start_time <- Sys.time()
> lasso(x, y_train, x_test)
> end_time <- Sys.time()
> print(end_time - start_time)
Time difference of 0.09741092 secs
> 

R version 4.1.2 (2021-11-01) -- "Bird Hippie"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: aarch64-apple-darwin20 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(glmnet)
> 
> DATA_PATH = "/Users/hilsts/Documents/linear-models-benchmark/data/"
> df <- read.csv(paste(DATA_PATH,"song_data.csv", sep = ""))
> 
> set.seed(100)
> 
> df$song_name <- NULL
> 
> index = sample(1:nrow(df), 0.75 * nrow(df))
> 
> train = df[index, ]
> test = df[-index, ]
> 
> x = as.matrix(train)
> y_train = train$song_popularity
> 
> x_test = as.matrix(test)
> y_test = test$song_popularity
> 
> lambdas <- 10^seq(2, -3, by = -.1)
> 
> lasso <- function(x, y_train, x_test) {
+     lasso_reg <- cv.glmnet(x, y_train, alpha = 1, lambda = lambdas, standardize = TRUE, nfolds = 5)
+     lambda_best <- lasso_reg$lambda.min 
+     predictions_test <- predict(lasso_reg, s = lambda_best, newx = x_test)
+ }
> 
> start_time <- Sys.time()
> lasso(x, y_train, x_test)
> end_time <- Sys.time()
> print(end_time - start_time)
Time difference of 0.09661293 secs
> 

R version 4.1.2 (2021-11-01) -- "Bird Hippie"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: aarch64-apple-darwin20 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(glmnet)
> 
> DATA_PATH = "/Users/hilsts/Documents/linear-models-benchmark/data/"
> df <- read.csv(paste(DATA_PATH,"song_data.csv", sep = ""))
> 
> set.seed(100)
> 
> df$song_name <- NULL
> 
> index = sample(1:nrow(df), 0.75 * nrow(df))
> 
> train = df[index, ]
> test = df[-index, ]
> 
> x = as.matrix(train)
> y_train = train$song_popularity
> 
> x_test = as.matrix(test)
> y_test = test$song_popularity
> 
> lambdas <- 10^seq(2, -3, by = -.1)
> 
> lasso <- function(x, y_train, x_test) {
+     lasso_reg <- cv.glmnet(x, y_train, alpha = 1, lambda = lambdas, standardize = TRUE, nfolds = 5)
+     lambda_best <- lasso_reg$lambda.min 
+     predictions_test <- predict(lasso_reg, s = lambda_best, newx = x_test)
+ }
> 
> start_time <- Sys.time()
> lasso(x, y_train, x_test)
> end_time <- Sys.time()
> print(end_time - start_time)
Time difference of 0.09684014 secs
> 

R version 4.1.2 (2021-11-01) -- "Bird Hippie"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: aarch64-apple-darwin20 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(glmnet)
> 
> DATA_PATH = "/Users/hilsts/Documents/linear-models-benchmark/data/"
> df <- read.csv(paste(DATA_PATH,"song_data.csv", sep = ""))
> 
> set.seed(100)
> 
> df$song_name <- NULL
> 
> index = sample(1:nrow(df), 0.75 * nrow(df))
> 
> train = df[index, ]
> test = df[-index, ]
> 
> x = as.matrix(train)
> y_train = train$song_popularity
> 
> x_test = as.matrix(test)
> y_test = test$song_popularity
> 
> lambdas <- 10^seq(2, -3, by = -.1)
> 
> lasso <- function(x, y_train, x_test) {
+     lasso_reg <- cv.glmnet(x, y_train, alpha = 1, lambda = lambdas, standardize = TRUE, nfolds = 5)
+     lambda_best <- lasso_reg$lambda.min 
+     predictions_test <- predict(lasso_reg, s = lambda_best, newx = x_test)
+ }
> 
> start_time <- Sys.time()
> lasso(x, y_train, x_test)
> end_time <- Sys.time()
> print(end_time - start_time)
Time difference of 0.09787989 secs
> 

R version 4.1.2 (2021-11-01) -- "Bird Hippie"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: aarch64-apple-darwin20 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(glmnet)
> 
> DATA_PATH = "/Users/hilsts/Documents/linear-models-benchmark/data/"
> df <- read.csv(paste(DATA_PATH,"song_data.csv", sep = ""))
> 
> set.seed(100)
> 
> df$song_name <- NULL
> 
> index = sample(1:nrow(df), 0.75 * nrow(df))
> 
> train = df[index, ]
> test = df[-index, ]
> 
> x = as.matrix(train)
> y_train = train$song_popularity
> 
> x_test = as.matrix(test)
> y_test = test$song_popularity
> 
> lambdas <- 10^seq(2, -3, by = -.1)
> 
> lasso <- function(x, y_train, x_test) {
+     lasso_reg <- cv.glmnet(x, y_train, alpha = 1, lambda = lambdas, standardize = TRUE, nfolds = 5)
+     lambda_best <- lasso_reg$lambda.min 
+     predictions_test <- predict(lasso_reg, s = lambda_best, newx = x_test)
+ }
> 
> start_time <- Sys.time()
> lasso(x, y_train, x_test)
> end_time <- Sys.time()
> print(end_time - start_time)
Time difference of 0.09681916 secs
> 

R version 4.1.2 (2021-11-01) -- "Bird Hippie"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: aarch64-apple-darwin20 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(glmnet)
> 
> DATA_PATH = "/Users/hilsts/Documents/linear-models-benchmark/data/"
> df <- read.csv(paste(DATA_PATH,"song_data.csv", sep = ""))
> 
> set.seed(100)
> 
> df$song_name <- NULL
> 
> index = sample(1:nrow(df), 0.75 * nrow(df))
> 
> train = df[index, ]
> test = df[-index, ]
> 
> x = as.matrix(train)
> y_train = train$song_popularity
> 
> x_test = as.matrix(test)
> y_test = test$song_popularity
> 
> lambdas <- 10^seq(2, -3, by = -.1)
> 
> lasso <- function(x, y_train, x_test) {
+     lasso_reg <- cv.glmnet(x, y_train, alpha = 1, lambda = lambdas, standardize = TRUE, nfolds = 5)
+     lambda_best <- lasso_reg$lambda.min 
+     predictions_test <- predict(lasso_reg, s = lambda_best, newx = x_test)
+ }
> 
> start_time <- Sys.time()
> lasso(x, y_train, x_test)
> end_time <- Sys.time()
> print(end_time - start_time)
Time difference of 0.09655404 secs
> 

R version 4.1.2 (2021-11-01) -- "Bird Hippie"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: aarch64-apple-darwin20 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(glmnet)
> 
> DATA_PATH = "/Users/hilsts/Documents/linear-models-benchmark/data/"
> df <- read.csv(paste(DATA_PATH,"song_data.csv", sep = ""))
> 
> set.seed(100)
> 
> df$song_name <- NULL
> 
> index = sample(1:nrow(df), 0.75 * nrow(df))
> 
> train = df[index, ]
> test = df[-index, ]
> 
> x = as.matrix(train)
> y_train = train$song_popularity
> 
> x_test = as.matrix(test)
> y_test = test$song_popularity
> 
> lambdas <- 10^seq(2, -3, by = -.1)
> 
> lasso <- function(x, y_train, x_test) {
+     lasso_reg <- cv.glmnet(x, y_train, alpha = 1, lambda = lambdas, standardize = TRUE, nfolds = 5)
+     lambda_best <- lasso_reg$lambda.min 
+     predictions_test <- predict(lasso_reg, s = lambda_best, newx = x_test)
+ }
> 
> start_time <- Sys.time()
> lasso(x, y_train, x_test)
> end_time <- Sys.time()
> print(end_time - start_time)
Time difference of 0.09770608 secs
> 
